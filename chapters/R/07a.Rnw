\documentclass[a4paper,showframe,11pt]{report}
\usepackage{standalone}
\standalonetrue
\ifstandalone
  \usepackage{../../haziq_thesis}
  \usepackage{../../haziq_maths}
  \usepackage{../../haziq_glossary}
  \addbibresource{../../bib/haziq.bib}
  \externaldocument{../01/.texpadtmp/introduction}
\fi

<<setup, include = FALSE, cache = FALSE>>=
# Load external .R file
knitr::read_chunk("00-prelim.R")
knitr::read_chunk("07-01-toy-example.R")
@
<<prelim, include = FALSE>>=
@

\begin{document}

Let's look at some toy examples to illustrate classification using I-probit models. First is a binary classification task based on two predictors. This data set consists of 300 points from two spirals with some Gaussian noise added. A plot is shown below.

<<spiral_data, cache = TRUE, fig.height = 4, fig.width = 5, out.width = "0.7\\linewidth", fig.cap = "Spiral data set.", fig.pos = "h">>=
@

We tried a few models. First with the linear canonical kernel. This gave very poor results (training error rate of 50\% is basically just guess-work). Not surprising because the problem hardly seems linear in nature. Best to go with a smooth function, so we tried the fBm kernel. This gave an improved training error rate (31.3\%) but judging by the predictive plot, there still is room for improvement.

<<spiral_canonical, cache = TRUE, fig.height = 4, fig.width = 5, out.width = "0.7\\linewidth", fig.cap = "Canonical kernel with multiple scale parameters.", fig.pos = "h">>=
@

<<spiral_fbm, cache = TRUE, fig.height = 4, fig.width = 5, out.width = "0.7\\linewidth", fig.cap = "fBm kernel with multiple scale parameters.", fig.pos = "h">>=
@

<<spiral_fbm_onelam, cache = TRUE, fig.height = 4, fig.width = 5, out.width = "0.7\\linewidth", fig.cap = "fBm kernel with a single shared scale parameter.", fig.pos = "h">>=
@

It turns out that retstricting the model to have a single scale parameter works best, coupled with the fBm kernel. This seems to suggest that the two variables are similarly scaled and effects the latent response in a similar magnitude. Indeed, the $X_1$ and $X_2$ variables are quite similar in that they are points from two spirals mirroring each other. We are able to get a training error rate of 1.67\%, and incidentally this model gives the highest lower-bound value as well.

One thing that was noticed with this data set was that different starting values led to possibly different converged parameter estimates. This leads us to believe that the variational lower bound to be maximised has multiple local optima. One way to overcome this is to perform multiple restarts and keep the results from the highest lower bound value. This is something to look out for when analysing real-data examples.

The next example is a four-class classification data set that is meant to be linearly separable in two dimensions. Random noise was added to the $X_1$ and $X_2$ component from four equidistant points (representing four distinct classes) around a circle of radius three. 125 points were generated for each class, thereby giving a total of 500 data points altogether. Here is a plot of the data set.

<<mixture_mod, cache = TRUE>>=
@

We fit a canonical I-probit model, and get the following results.

<<mixture_mod_plot, fig.show = "hold", fig.height = 4, fig.width = 5, out.width = "0.49\\linewidth", fig.cap = "Canonical kernel is able to linearly separate the data points.", fig.pos = "h">>=
@

\end{document}

<<include = FALSE>>=
move_files_to_chapter()
delete_files()
@
